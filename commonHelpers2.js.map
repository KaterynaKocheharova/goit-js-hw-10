{"version":3,"file":"commonHelpers2.js","sources":["../src/js/1-timer.js"],"sourcesContent":["// INCLUDING LIBRARY\n\nimport flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\n// VARIABLES\n\nconst btn = document.querySelector('[data-start]');\nbtn.disabled = true;\nconst daysField = document.querySelector(\"[data-days]\");\nconst hoursField = document.querySelector(\"[data-hours]\");\nconst minutesField = document.querySelector(\"[data-minutes]\");\nconst secondsField = document.querySelector(\"[data-seconds]\");\n\n\n// USER SELECTED DATE\nlet userSelectedDate;\n\n// FLATPICKER WITH OPTIONS\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    if (selectedDates[0] < new Date()) {\n      alert('Please choose a date in the future');\n    } else {\n      btn.disabled = false;\n      userSelectedDate = selectedDates[0];\n      btn.addEventListener(\"click\", backwardsTimer);\n    }\n  },\n};\n\n\nconst myTimePicker = flatpickr('#datetime-picker', options);\n\n\n\n// HANDLE BACKWARDS TIMER BTN\n\nfunction backwardsTimer() {\nbtn.disabled = true;\nlet intervalId;\n\n\nintervalId = setInterval(() => {\n  let milisecTimeDif = userSelectedDate - new Date();\n\n  if(milisecTimeDif <= 0) {\n    clearInterval(intervalId);\n  } else {\n    const timeObj = convertMs(milisecTimeDif);\n    let seconds = timeObj.seconds;\n    let minutes = timeObj.minutes;\n    let hours = timeObj.hours;\n    let days = timeObj.days;\n\n    secondsField.textContent = addLeadingZero(String(seconds));\n    minutesField.textContent = addLeadingZero(String(minutes));\n    hoursField.textContent = addLeadingZero(String(hours));\n    daysField.textContent = addLeadingZero(String(days));\n  }\n}, 1000)\n\n// add to spans\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n  return { days, hours, minutes, seconds };\n}\n\n// ADD LEADING ZERO\n\nfunction addLeadingZero(value) {\n  return value.padStart(2, '0');\n}\n\n\n\n\n\n"],"names":["btn","daysField","hoursField","minutesField","secondsField","userSelectedDate","options","selectedDates","backwardsTimer","flatpickr","intervalId","milisecTimeDif","timeObj","convertMs","seconds","minutes","hours","days","addLeadingZero","ms","value"],"mappings":"ivBAOA,MAAMA,EAAM,SAAS,cAAc,cAAc,EACjDA,EAAI,SAAW,GACf,MAAMC,EAAY,SAAS,cAAc,aAAa,EAChDC,EAAa,SAAS,cAAc,cAAc,EAClDC,EAAe,SAAS,cAAc,gBAAgB,EACtDC,EAAe,SAAS,cAAc,gBAAgB,EAI5D,IAAIC,EAGJ,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACjBA,EAAc,CAAC,EAAI,IAAI,KACzB,MAAM,oCAAoC,GAE1CP,EAAI,SAAW,GACfK,EAAmBE,EAAc,CAAC,EAClCP,EAAI,iBAAiB,QAASQ,CAAc,EAE/C,CACH,EAGqBC,EAAU,mBAAoBH,CAAO,EAM1D,SAASE,GAAiB,CAC1BR,EAAI,SAAW,GACf,IAAIU,EAGJA,EAAa,YAAY,IAAM,CAC7B,IAAIC,EAAiBN,EAAmB,IAAI,KAE5C,GAAGM,GAAkB,EACnB,cAAcD,CAAU,MACnB,CACL,MAAME,EAAUC,EAAUF,CAAc,EACxC,IAAIG,EAAUF,EAAQ,QAClBG,EAAUH,EAAQ,QAClBI,EAAQJ,EAAQ,MAChBK,EAAOL,EAAQ,KAEnBR,EAAa,YAAcc,EAAe,OAAOJ,CAAO,CAAC,EACzDX,EAAa,YAAce,EAAe,OAAOH,CAAO,CAAC,EACzDb,EAAW,YAAcgB,EAAe,OAAOF,CAAK,CAAC,EACrDf,EAAU,YAAciB,EAAe,OAAOD,CAAI,CAAC,CACpD,CACH,EAAG,GAAI,CAGP,CAEA,SAASJ,EAAUM,EAAI,CAKrB,MAAMF,EAAO,KAAK,MAAME,EAAK,KAAG,EAC1BH,EAAQ,KAAK,MAAOG,EAAK,MAAO,IAAI,EACpCJ,EAAU,KAAK,MAAQI,EAAK,MAAO,KAAQ,GAAM,EACjDL,EAAU,KAAK,MAASK,EAAK,MAAO,KAAQ,IAAU,GAAM,EAClE,MAAO,CAAE,KAAAF,EAAM,MAAAD,EAAO,QAAAD,EAAS,QAAAD,CAAO,CACxC,CAIA,SAASI,EAAeE,EAAO,CAC7B,OAAOA,EAAM,SAAS,EAAG,GAAG,CAC9B"}